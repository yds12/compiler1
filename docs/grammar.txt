# Non-terminals in ALLCAPS.
# Terminals written as they appear in the programs.
# The | in the rules means "or". A * in front of a non-terminal means
# "zero or more". Square brackets are used to denote zero or one 
# (i.e. optional).


PROGRAM := PROGRAM_PART*

PROGRAM_PART := STATEMENT
              | FUNCTION

STATEMENT := { STATEMENT* }
           | DECLARATION 
           | ASSIGNMENT
           | IDENTIFIER [CALL_PARAMS] ;
           | if EXPR : STATEMENT [else STATEMENT]
           | return EXPR ;
           | loop STATEMENT
           | while EXPR : STATEMENT
           | for DECLARATION* , EXPR , STATEMENT : STATEMENT
           | match EXPR { MATCH_CLAUSES }

FUNCTION := fn IDENTIFIER [PARAMS] : STATEMENT

DECLARATION := TYPE IDENTIFIER [= EXPR] ;

ASSIGNMENT := IDENTIFIER = EXPR ;
            | IDENTIFIER INC_DEC ;
            | IDENTIFIER ASSIGN_OP EXPR ;

EXPR := TERM
      | EXPR OP EXPR
      | not EXPR
      | ( EXPR )

MATCH_CLAUSES := EXPR : STATEMENT [MATCH_CLAUSES]

PARAMS := TYPE IDENTIFIER [, PARAMS]

INC_DEC := ++ | --

ASSIGN_OP := += | -=

CALL_PARAMS := EXPR [, CALL_PARAMS]

TYPE := int | string | float | bool

TERM := LITERAL
      | IDENTIFIER [( [CALL_PARAMS] )]

OP := + | - | * | / | % | and | or

